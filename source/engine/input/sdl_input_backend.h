#pragma once

#include <unordered_map>
#include <input/controller.h>
#include <input/input.h>
#include <input/keyboard.h>
#include <input/mouse.h>

namespace kairos {

static const dictionary<int, action> our_action_adapter = {{SDL_PRESSED, action::press},
                                                           {SDL_RELEASED, action::release}};

static const dictionary<SDL_GameControllerButton, controller_button> our_controller_button_adapter =
    {
        {SDL_CONTROLLER_BUTTON_A, controller_button::button_A},
        {SDL_CONTROLLER_BUTTON_B, controller_button::button_B},
        {SDL_CONTROLLER_BUTTON_X, controller_button::button_X},
        {SDL_CONTROLLER_BUTTON_Y, controller_button::button_Y},
        {SDL_CONTROLLER_BUTTON_BACK, controller_button::back},
        {SDL_CONTROLLER_BUTTON_START, controller_button::start},
        {SDL_CONTROLLER_BUTTON_GUIDE, controller_button::guide},
        {SDL_CONTROLLER_BUTTON_LEFTSTICK, controller_button::left_stick},
        {SDL_CONTROLLER_BUTTON_RIGHTSTICK, controller_button::right_stick},
        {SDL_CONTROLLER_BUTTON_LEFTSHOULDER, controller_button::left_shoulder},
        {SDL_CONTROLLER_BUTTON_RIGHTSHOULDER, controller_button::right_shoulder},
        {SDL_CONTROLLER_BUTTON_DPAD_UP, controller_button::dpad_up},
        {SDL_CONTROLLER_BUTTON_DPAD_DOWN, controller_button::dpad_down},
        {SDL_CONTROLLER_BUTTON_DPAD_LEFT, controller_button::dpad_left},
        {SDL_CONTROLLER_BUTTON_DPAD_RIGHT, controller_button::dpad_right},
        {SDL_CONTROLLER_BUTTON_MAX, controller_button::count},
        {SDL_CONTROLLER_BUTTON_INVALID, controller_button::count},
};

static const dictionary<SDL_GameControllerAxis, controller_axis> our_controller_axis_adapter = {
    {SDL_CONTROLLER_AXIS_LEFTX, controller_axis::left_x},
    {SDL_CONTROLLER_AXIS_LEFTY, controller_axis::left_y},
    {SDL_CONTROLLER_AXIS_RIGHTX, controller_axis::right_x},
    {SDL_CONTROLLER_AXIS_RIGHTY, controller_axis::right_y},
    {SDL_CONTROLLER_AXIS_TRIGGERLEFT, controller_axis::trigger_left},
    {SDL_CONTROLLER_AXIS_TRIGGERRIGHT, controller_axis::trigger_right},
    {SDL_CONTROLLER_AXIS_MAX, controller_axis::count},
    {SDL_CONTROLLER_AXIS_INVALID, controller_axis::count},
};

static const dictionary<uint32, controller_device_state> our_controller_state_adapter = {
    {to_index32(SDL_CONTROLLERDEVICEADDED), controller_device_state::added},
    {to_index32(SDL_CONTROLLERDEVICEREMOVED), controller_device_state::removed},
    {to_index32(SDL_CONTROLLERDEVICEREMAPPED), controller_device_state::remapped},
};

static const dictionary<int, mouse_button> our_mouse_button_adapter = {
    {SDL_BUTTON_LEFT, mouse_button::left},     {SDL_BUTTON_RIGHT, mouse_button::right},
    {SDL_BUTTON_MIDDLE, mouse_button::middle}, {SDL_BUTTON_X1, mouse_button::button_4},
    {SDL_BUTTON_X2, mouse_button::button_5},
};

static const dictionary<SDL_Scancode, key> our_keyboard_adapter = {
    {SDL_SCANCODE_UNKNOWN, key::Unknown},
    {SDL_SCANCODE_A, key::A},
    {SDL_SCANCODE_B, key::B},
    {SDL_SCANCODE_C, key::C},
    {SDL_SCANCODE_D, key::D},
    {SDL_SCANCODE_E, key::E},
    {SDL_SCANCODE_F, key::F},
    {SDL_SCANCODE_G, key::G},
    {SDL_SCANCODE_H, key::H},
    {SDL_SCANCODE_I, key::I},
    {SDL_SCANCODE_J, key::J},
    {SDL_SCANCODE_K, key::K},
    {SDL_SCANCODE_L, key::L},
    {SDL_SCANCODE_M, key::M},
    {SDL_SCANCODE_N, key::N},
    {SDL_SCANCODE_O, key::O},
    {SDL_SCANCODE_P, key::P},
    {SDL_SCANCODE_Q, key::Q},
    {SDL_SCANCODE_R, key::R},
    {SDL_SCANCODE_S, key::S},
    {SDL_SCANCODE_T, key::T},
    {SDL_SCANCODE_U, key::U},
    {SDL_SCANCODE_V, key::V},
    {SDL_SCANCODE_W, key::W},
    {SDL_SCANCODE_X, key::X},
    {SDL_SCANCODE_Y, key::Y},
    {SDL_SCANCODE_Z, key::Z},
    {SDL_SCANCODE_0, key::Num0},
    {SDL_SCANCODE_1, key::Num1},
    {SDL_SCANCODE_2, key::Num2},
    {SDL_SCANCODE_3, key::Num3},
    {SDL_SCANCODE_4, key::Num4},
    {SDL_SCANCODE_5, key::Num5},
    {SDL_SCANCODE_6, key::Num6},
    {SDL_SCANCODE_7, key::Num7},
    {SDL_SCANCODE_8, key::Num8},
    {SDL_SCANCODE_9, key::Num9},
    {SDL_SCANCODE_ESCAPE, key::Escape},
    {SDL_SCANCODE_LCTRL, key::LControl},
    {SDL_SCANCODE_LSHIFT, key::LShift},
    {SDL_SCANCODE_LALT, key::LAlt},
    {SDL_SCANCODE_LGUI, key::LSystem},
    {SDL_SCANCODE_RCTRL, key::RControl},
    {SDL_SCANCODE_RSHIFT, key::RShift},
    {SDL_SCANCODE_RALT, key::RAlt},
    {SDL_SCANCODE_RGUI, key::RSystem},
    {SDL_SCANCODE_MENU, key::Menu},
    {SDL_SCANCODE_LEFTBRACKET, key::LBracket},
    {SDL_SCANCODE_RIGHTBRACKET, key::RBracket},
    {SDL_SCANCODE_SEMICOLON, key::Semicolon},
    {SDL_SCANCODE_COMMA, key::Comma},
    {SDL_SCANCODE_PERIOD, key::Period},
    {SDL_SCANCODE_SLASH, key::Slash},
    {SDL_SCANCODE_BACKSLASH, key::Backslash},
    {SDL_SCANCODE_EQUALS, key::Equal},
    {SDL_SCANCODE_APOSTROPHE, key::Quote},
    {SDL_SCANCODE_SPACE, key::Space},
    {SDL_SCANCODE_RETURN, key::Enter},
    {SDL_SCANCODE_BACKSPACE, key::Backspace},
    {SDL_SCANCODE_TAB, key::Tab},
    {SDL_SCANCODE_PAGEUP, key::PageUp},
    {SDL_SCANCODE_PAGEDOWN, key::PageDown},
    {SDL_SCANCODE_END, key::End},
    {SDL_SCANCODE_HOME, key::Home},
    {SDL_SCANCODE_INSERT, key::Insert},
    {SDL_SCANCODE_DELETE, key::Delete},
    {SDL_SCANCODE_KP_PLUS, key::Add},
    {SDL_SCANCODE_KP_MINUS, key::Subtract},
    {SDL_SCANCODE_KP_MULTIPLY, key::Multiply},
    {SDL_SCANCODE_KP_DIVIDE, key::Divide},
    {SDL_SCANCODE_KP_DECIMAL, key::Decimal},
    {SDL_SCANCODE_KP_ENTER, key::EnterKeyPad},
    {SDL_SCANCODE_KP_EQUALS, key::EqualKeyPad},
    {SDL_SCANCODE_LEFT, key::Left},
    {SDL_SCANCODE_RIGHT, key::Right},
    {SDL_SCANCODE_UP, key::Up},
    {SDL_SCANCODE_DOWN, key::Down},
    {SDL_SCANCODE_KP_0, key::Numpad0},
    {SDL_SCANCODE_KP_1, key::Numpad1},
    {SDL_SCANCODE_KP_2, key::Numpad2},
    {SDL_SCANCODE_KP_3, key::Numpad3},
    {SDL_SCANCODE_KP_4, key::Numpad4},
    {SDL_SCANCODE_KP_5, key::Numpad5},
    {SDL_SCANCODE_KP_6, key::Numpad6},
    {SDL_SCANCODE_KP_7, key::Numpad7},
    {SDL_SCANCODE_KP_8, key::Numpad8},
    {SDL_SCANCODE_KP_9, key::Numpad9},
    {SDL_SCANCODE_F1, key::F1},
    {SDL_SCANCODE_F2, key::F2},
    {SDL_SCANCODE_F3, key::F3},
    {SDL_SCANCODE_F4, key::F4},
    {SDL_SCANCODE_F5, key::F5},
    {SDL_SCANCODE_F6, key::F6},
    {SDL_SCANCODE_F7, key::F7},
    {SDL_SCANCODE_F8, key::F8},
    {SDL_SCANCODE_F9, key::F9},
    {SDL_SCANCODE_F10, key::F10},
    {SDL_SCANCODE_F11, key::F11},
    {SDL_SCANCODE_F12, key::F12},
    {SDL_SCANCODE_F13, key::F13},
    {SDL_SCANCODE_F14, key::F14},
    {SDL_SCANCODE_F15, key::F15},
    {SDL_SCANCODE_PAUSE, key::Pause},
    {SDL_SCANCODE_CAPSLOCK, key::CapsLock},
    {SDL_SCANCODE_SCROLLLOCK, key::ScrollLock},
    {SDL_SCANCODE_NUMLOCKCLEAR, key::NumLock},
    {SDL_SCANCODE_MINUS, key::Minus},
    {SDL_SCANCODE_GRAVE, key::GraveAccent},
    {SDL_NUM_SCANCODES, key::count}};

} // namespace kairos